USER DETAILS:
-------------
user id -		 number primary key
Username -> NAF0001      varchar() 
name			 varchar()
mail -> 		 varchar()
password ->		 varchar() 
depLookUpRefId ->  	 varchar()
isActive ->		 bool
phone number->		 varchar()



Ticket Details:
---------------

user id                 number Foreign key //be
ticket id		number primary key //be
ticketRefNum		varchar()
title			varchar()
description		varchar()
created by		varchar()
departmentLookUpId	varchar()
startDateTime		DateTime
endDateTime		DateTime
owner			varchar() //be
assignedTo		id
status			varchar() //be
priority		number
severity		number
age			number //be
importanceLevel		varchar() //high,medium,low //be
comments		varchar()



AttachmentsDetails:
-------------------

ticket id		number foreign key
attachment id		number primary key
filename		varchar()
isActive		bool


Ticket audit tracing Details:
-----------------------------

ticket id 		int foreign key
history id 		int primary key
status 			varchar()
updated by 		varchar()
updated on 		DateTime


lookup table:
-------------

lookup id		int primary key
lookup value		varchar()
lookup category		varchar()  (department)
public IList<TicketDetails> TicketDetails { get; } = new List<TicketDetails>();
public IList<UserDetails> UserDetails { get; } = new List<UserDetails>();

Comments Table:
---------------


History Table:
--------------
public int id {  get; set; }
        public string? ticketRefNum { get; set; }
        public string? status { get; set; }
        public int? priority { get; set; }
        public int? severity { get; set; }
        [Display(Name ="LookUpTable")]
        public virtual int? departmentLookUpRefId { get; set; }
        [ForeignKey("departmentLookUpRefId")]
        public virtual LookUpTable LookUpTable { get; set; }
        public string? attachments { get; set; }
        public string? endDate { get; set; }
        public int? updatedBy { get; set; }
        public string? updatedOn { get; set; }

Role table:
-----------
int id;
string role; (head,user,generalUser)


manage account -> security ->2 step verification - on
app password -> generate password


font awesome -> send embed kit -> take the icon <i></i> -> replace class with className or icon with className
	

"userId": 1,
  "userDetails": null,
  "id": 1,
  "ticketRefnum": "Tck0001",
  "title": "string",
  "description": "string",
  "createdBy": "user",
  "departmentLookUpId": 1,
  "lookUpTable": null,
  "startDate": "07/14/2023",
  "endDate": "2023-07-14",
  "owner": "depuser2",
  "status": "completed",
  "priotity": null,
  "severity": 3,
  "assignedTo": 3,
  "age": 3,
  "attachments": "C:\\fakepath\\IMG-20230310-WA0009.jpg",
  "isDeleted": false



  insert into lookUpTables values('hr','department');
  insert into lookUpTables values('wpr','department');
  insert into lookUpTables values('qa','department');
  insert into lookUpTables values('payroll','department');
  insert into lookUpTables values('engineering','department');
  insert into lookUpTables values('user','department');
	insert into lookUpTables values('admin','department');



  insert into employeeRoles values('head');
   insert into employeeRoles values('user');
    insert into employeeRoles values('general user');
 insert into employeeRoles values('admin');

comment: "hello"
commentedBy: "abc"
commentedOn: "2023-07-18T10:25:05.9738773"
id: 13
ticketRefnum: "Tck0003"






19/07:
------
reopen ticket -> make modal - done
role based access for api and components
useContext -done
show history table

while reopening ticket it not updating
in viewAllTicket page, make the selected button different (all,assigned,..)


for assigned tickets component display, the tickets in priority order and uncompleted tickets first